OK Написать функции для (0x16	22	GOTO_SW0) и (0x17	23	GOTO_SW1)
1.проверить оставшийся функционал
OK 2.прямая установка шагов в точку без движения
OK 3.торможение работает не правильно
ОК 4.исправить разгон и торможение сделать плавным
ОК 5.исправить выставление скорость сделать равномерным по всей шкале а не только в конце
6.почистить программу от лишнего 
7.возможно отделить режим по концевикам или убрать лишние режимы 

OK 8.учесть режимы для slowdown() stop() в хандлере HAL_TIM_OC_DelayElapsedCallback что бы не было остановок от таймера или энкодера в режиме бесконечности или по концевикам
9.учесть режим бесконечности в обработчике концевиком, или оставить так 

switch (settings->mod_rotation) {
	case step_by_meter_enc_intermediate:
	case step_by_meter_enc_limit:
	case step_by_meter_timer_intermediate:
	case step_by_meter_timer_limit:
	case bldc_limit:
	case calibration_timer:
	case calibration_enc:
	{
		break;
	}
	case step_inf:
	case bldc_inf:
	{
		break;
	}
	default:
	{
		break;
	}
}

21.02.25
энкодер мешает работе разделить в режимах или отключать таймер или энкодер 



24.02.25
проверять во время работы ошибку драйвера

13.03.25 проверять направление вращения в калибровке если не правильно подключен мотор то процедура калибровки ломается
	в бесконечном режиме реагирует на концевики 

сделал: теперь выход EN работает штатно 


14.03.25
доработать функцию
void motor_pool(void const * argument)
{
  /* USER CODE BEGIN motor_pool */
	pMotor->Init();
	//uint32_t tickcount = osKernelSysTick();// переменная для точной задержки
	/* Infinite loop */
	for (;;) {

		// проверять концевики. если мотор не стоит и концевик включен то экстренно остановить

		//osDelayUntil(&tickcount, 1); // задача будет вызываься ровно через 1 милисекунду
		osDelay(1);
	}
  /* USER CODE END motor_pool */
}

перед запуском таймера дребезга проверить 
// запускать только если мы на концевике
ignore_sensors = true;


16.03.24
не рекомендуется использование совместное использование команд хождения по концевикам и хождение по шагам (происходит сбой количества шагов, теряется текущая позиция)


24.03.24
нужно написать класс который будет API для таймера энкодера (stm32f4). таймер 16 битный настроен на режим энкодера так же у таймера настроены два канала для генерирования прерывания по достижении заданных значений


27
не правильно работает абсолютная позиция в режиме энкодера